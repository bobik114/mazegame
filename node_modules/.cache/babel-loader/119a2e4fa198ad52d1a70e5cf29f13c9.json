{"ast":null,"code":"var _jsxFileName = \"/home/lukasz/Pulpit/Projekty/MyGame/src/components/map/Map.js\";\nimport React from 'react';\nimport Player from '../player/Player';\n\nconst Map = () => {\n  const mapBase = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\n\n  const generatemMap = mapa => {\n    for (const el of mapa) {\n      el.map((e, i) => {\n        if (e === 0) {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/assets/grass.png\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 28\n            }\n          });\n        } else if (e === 1) {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/assets/rock.png\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 28\n            }\n          });\n        } else if (e === 2) {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/assets/tree.png\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 28\n            }\n          });\n        }\n      });\n    } // {mapBase.map((e, i) => <tr key={i}>{e.map((e, i) => \n    // <td key={i}><img src={e} />{i}</td>)}</tr>)}\n\n  };\n\n  console.log(generatemMap(mabBase));\n\n  const getMapSq = type => {\n    switch (type) {\n      case 0:\n        return \"grass\";\n\n      case 1:\n        return \"rock\";\n\n      case 2:\n        return \"tree\";\n\n      default:\n        return \"grass\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      position: \"relative\",\n      margin: \"50px auto\",\n      width: \"1155px\",\n      height: \"770px\",\n      backgroundColor: \"green\",\n      border: \"solid 4px yellow\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, mapBase.map((e, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 32\n    }\n  }, e.map((e, i) => /*#__PURE__*/React.createElement(\"td\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 73\n    }\n  }), i)))), /*#__PURE__*/React.createElement(Player, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/lukasz/Pulpit/Projekty/MyGame/src/components/map/Map.js"],"names":["React","Player","Map","mapBase","generatemMap","mapa","el","map","e","i","console","log","mabBase","getMapSq","type","position","margin","width","height","backgroundColor","border"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Player from '../player/Player'\n\nconst Map = () => {\n\n    const mapBase = [\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n    ]\n\n    const generatemMap = (mapa) => {\n        for(const el of mapa) {\n            el.map((e, i) => \n                {if(e === 0) {\n                    return <img src=\"/assets/grass.png\" />\n                }\n                else if(e === 1) {\n                    return <img src=\"/assets/rock.png\" />\n                }\n                else if(e === 2) {\n                    return <img src=\"/assets/tree.png\" />\n                }\n            })\n        }\n\n\n        // {mapBase.map((e, i) => <tr key={i}>{e.map((e, i) => \n        // <td key={i}><img src={e} />{i}</td>)}</tr>)}\n    }\n\n    console.log(generatemMap(mabBase));\n\n    \n    const getMapSq = type => {\n        switch (type) {\n        case 0:\n            return \"grass\";\n        case 1:\n            return \"rock\";\n        case 2:\n            return \"tree\";\n        default:\n            return \"grass\";\n        }\n    };\n\n    return <>\n        <table style={{\n            position: \"relative\",\n            margin: \"50px auto\",\n            width: \"1155px\",\n            height: \"770px\",\n            backgroundColor: \"green\",\n            border: \"solid 4px yellow\"\n        }} >\n        {mapBase.map((e, i) => <tr key={i}>{e.map((e, i) => <td key={i}><img src={e} />{i}</td>)}</tr>)}\n            <Player />\n        </table>\n        \n    </>\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}