{"ast":null,"code":"var _jsxFileName = \"/home/lukasz/Pulpit/Projekty/MyGame/src/components/map/Map.js\";\nimport React from 'react';\nimport Player from '../player/Player';\n\nlet Map = () => {\n  const mapBase = [[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\n  const generatedMap = mapBase[0].map((e, i) => /*#__PURE__*/React.createElement(\"td\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 59\n    }\n  }), e));\n  console.log(generatedMap); // const generateMap = (mapa) => {\n  //     for(let el of mapa) {\n  //         for(let il of el) {\n  //             if(il === 0) {\n  //                 return il=<img src=\"/assets/grass.png\" />\n  //             }\n  //             else if(il === 1) {\n  //                 return il=<img src=\"/assets/rock.png\" />\n  //             }\n  //             else if(il === 2) {\n  //                 return il=<img src=\"/assets/tree.png\" />\n  //             }\n  //         }\n  //     }\n  //     // {mapBase.map((e, i) => <tr key={i}>{e.map((e, i) => \n  //     // <td key={i}><img src={e} />{i}</td>)}</tr>)}\n  // }\n\n  console.log(generateMap(mapBase)[0][0]);\n\n  const getMapSq = type => {\n    switch (type) {\n      case 0:\n        return \"grass\";\n\n      case 1:\n        return \"rock\";\n\n      case 2:\n        return \"tree\";\n\n      default:\n        return \"grass\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      position: \"relative\",\n      margin: \"50px auto\",\n      width: \"1155px\",\n      height: \"770px\",\n      backgroundColor: \"green\",\n      border: \"solid 4px yellow\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, mapBase.map((e, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 32\n    }\n  }, e.map((e, i) => /*#__PURE__*/React.createElement(\"td\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 73\n    }\n  }), i)))), /*#__PURE__*/React.createElement(Player, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/lukasz/Pulpit/Projekty/MyGame/src/components/map/Map.js"],"names":["React","Player","Map","mapBase","generatedMap","map","e","i","console","log","generateMap","getMapSq","type","position","margin","width","height","backgroundColor","border"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Player from '../player/Player'\n\nlet Map = () => {\n\n    const mapBase = [\n        [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n    ]\n\nconst generatedMap = mapBase[0].map((e, i) => <td key={i}><img src={e}/>{e}</td>)\n\nconsole.log(generatedMap);\n\n    // const generateMap = (mapa) => {\n    //     for(let el of mapa) {\n    //         for(let il of el) {\n    //             if(il === 0) {\n    //                 return il=<img src=\"/assets/grass.png\" />\n    //             }\n    //             else if(il === 1) {\n    //                 return il=<img src=\"/assets/rock.png\" />\n    //             }\n    //             else if(il === 2) {\n    //                 return il=<img src=\"/assets/tree.png\" />\n    //             }\n            \n    //         }\n\n    //     }\n        \n\n\n    //     // {mapBase.map((e, i) => <tr key={i}>{e.map((e, i) => \n    //     // <td key={i}><img src={e} />{i}</td>)}</tr>)}\n    // }\n\n    console.log(generateMap(mapBase)[0][0]);\n\n    \n    const getMapSq = type => {\n        switch (type) {\n        case 0:\n            return \"grass\";\n        case 1:\n            return \"rock\";\n        case 2:\n            return \"tree\";\n        default:\n            return \"grass\";\n        }\n    };\n\n    return <>\n        <table style={{\n            position: \"relative\",\n            margin: \"50px auto\",\n            width: \"1155px\",\n            height: \"770px\",\n            backgroundColor: \"green\",\n            border: \"solid 4px yellow\"\n        }} >\n        {mapBase.map((e, i) => <tr key={i}>{e.map((e, i) => <td key={i}><img src={e} />{i}</td>)}</tr>)}\n            <Player />\n        </table>\n        \n    </>\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}